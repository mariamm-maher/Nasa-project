import { useEffect, useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { BookOpen, ExternalLink, Calendar, Search } from "lucide-react";
import GalacticBackground from "@/components/GalacticBackground";
import { useSourcesStore } from "@/stores/SourcesStore";

const SourcesPage = () => {
  const [summaries, setSummaries] = useState({});
  const [loadingIdx, setLoadingIdx] = useState(null);
  const [search, setSearch] = useState("");
  const { sources, loading, error, fetchSources, searchSources } =
    useSourcesStore();

  useEffect(() => {
    fetchSources();
    // eslint-disable-next-line
  }, []);

  // Handle search input change
  const handleSearchChange = async (e) => {
    const value = e.target.value;
    setSearch(value);
    if (value.trim() === "") {
      fetchSources();
    } else {
      await searchSources(value);
    }
  };

  // Normalize API data for rendering
  let displayResources = [];
  if (Array.isArray(sources)) {
    displayResources = sources.map((item) => ({
      title: item.Title || item.title,
      link: item.Link || item.link,
      year: item.Year || item.year || "-",
    }));
  } else if (sources && sources.data) {
    displayResources = sources.data.map((item) => ({
      title: item.Title || item.title,
      link: item.Link || item.link,
      year: item.Year || item.year || "-",
    }));
  }

  const handleSummarize = (idx) => {
    setLoadingIdx(idx);
    setTimeout(() => {
      setSummaries((prev) => ({
        ...prev,
        [idx]:
          "This is a placeholder summary generated by AI. It will provide a concise overview of the publication's key findings and significance.",
      }));
      setLoadingIdx(null);
    }, 1200);
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-[#0B0B1E] to-[#1B262C] text-white px-4 py-12 flex flex-col items-center relative overflow-hidden">
      <GalacticBackground />
      <div className="relative z-10 w-full flex flex-col items-center">
        <header className="mb-12 text-center">
          <h1 className="text-4xl md:text-5xl font-extrabold bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 bg-clip-text text-transparent drop-shadow-glow mb-2">
            NASA Space Biology Resources
          </h1>
          <p className="text-lg md:text-xl text-cyan-200/80 max-w-2xl mx-auto">
            Browse through all available publications. Click summarize to get an
            AI-generated overview.
          </p>
        </header>
        {/* Search Bar */}
        <motion.div
          className="w-full max-w-xl flex items-center bg-[#181A2A]/80 border-2 border-cyan-400/40 rounded-2xl shadow-xl px-6 py-3 mb-10 backdrop-blur-md focus-within:border-cyan-400/80 transition-all duration-300 relative group"
          whileHover={{ scale: 1.03, boxShadow: "0 0 32px 4px #67e8f9" }}
          whileFocusWithin={{ scale: 1.05, boxShadow: "0 0 48px 8px #a21caf" }}
        >
          <Search className="w-5 h-5 text-cyan-400/80 mr-3" />
          <input
            type="text"
            className="flex-1 bg-transparent text-white placeholder-cyan-300/60 text-lg focus:outline-none"
            placeholder="Search resources..."
            value={search}
            onChange={handleSearchChange}
            aria-label="Search resources"
          />
        </motion.div>
        {loading && (
          <div className="text-cyan-300 mb-8">Loading resources...</div>
        )}
        {error && <div className="text-red-400 mb-8">{error}</div>}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 w-full max-w-6xl">
          {!loading && displayResources.length === 0 && (
            <div className="col-span-full text-center text-cyan-200/60 text-lg mt-8">
              No resources found.
            </div>
          )}
          {displayResources.map((res, idx) => (
            <motion.div
              key={idx}
              className="bg-[#181A2A]/90 border border-cyan-400/20 rounded-2xl p-6 shadow-2xl flex flex-col gap-3 backdrop-blur-md relative"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.7, delay: idx * 0.1 }}
            >
              <div className="flex items-center gap-2 mb-2">
                <BookOpen className="w-5 h-5 text-purple-400" />
                <span className="font-bold text-lg text-cyan-300">
                  {res.title}
                </span>
              </div>

              <a
                href={res.link}
                target="_blank"
                rel="noopener noreferrer"
                className="inline-flex items-center gap-1 text-cyan-400 hover:text-pink-400 underline underline-offset-4 transition-colors mb-2"
              >
                <ExternalLink className="w-4 h-4" />
                View Resource
              </a>
              <motion.button
                onClick={() => handleSummarize(idx)}
                disabled={loadingIdx === idx}
                className={`mt-2 px-5 py-2 rounded-xl font-semibold text-base transition-all duration-300 shadow-lg focus:outline-none focus:ring-2 focus:ring-cyan-400/60 ${
                  loadingIdx === idx
                    ? "bg-gray-700 text-gray-400 cursor-wait"
                    : "bg-gradient-to-r from-cyan-500 to-purple-500 text-white hover:from-cyan-400 hover:to-purple-600 transform hover:scale-105 shadow-cyan-400/30 hover:shadow-pink-400/30"
                }`}
                whileHover={
                  loadingIdx !== idx
                    ? { scale: 1.07, boxShadow: "0 0 16px 2px #67e8f9" }
                    : {}
                }
                whileTap={loadingIdx !== idx ? { scale: 0.97 } : {}}
              >
                {loadingIdx === idx ? (
                  <span className="flex items-center gap-2">
                    <span className="animate-spin rounded-full h-4 w-4 border-b-2 border-cyan-400"></span>
                    Summarizing...
                  </span>
                ) : (
                  "Summarize"
                )}
              </motion.button>
              <AnimatePresence>
                {summaries[idx] && (
                  <motion.div
                    className="mt-4 bg-[#23244a]/80 border border-cyan-400/10 rounded-xl p-4 text-cyan-100/90 shadow-inner"
                    initial={{ opacity: 0, height: 0 }}
                    animate={{ opacity: 1, height: "auto" }}
                    exit={{ opacity: 0, height: 0 }}
                    transition={{ duration: 0.5 }}
                  >
                    {summaries[idx]}
                  </motion.div>
                )}
              </AnimatePresence>
            </motion.div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default SourcesPage;
